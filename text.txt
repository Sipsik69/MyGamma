аписание кода на Python с использованием IDLE или Python Shell подходит для простых операций, но эти инструменты приносят расстройство и отчаяние при работе с крупными проектами. Использование среды IDE или редактора кода приносит удовольствие от разработки, но какой из них лучше для вас?

Эта статья поможет прояснить какой вариант среди доступных подходит больше. Вы также увидите плюсы и минусы каждого из них, что поможет принять обоснованное решение.

Чтобы упростить задачу, разделим наш список на две категории инструментов: созданные исключительно для разработки на Python и созданные для общей разработки, но которые можно использовать для работы с Python. Определим для каждого ЗА и ПРОТИВ. Но сначала…

Что такое IDE и редакторы кода
IDE (или интегрированная среда разработки) — программа, предназначенная для разработки программного обеспечения. Как следует из названия, IDE включает в себя инструменты, специально предназначенные для разработки программного обеспечения.

Стандартно инструменты содержат :

Редактор, предназначенный для обработки кода (например, с подсветкой синтаксиса и автозавершением)
Средства сборки, выполнения и отладки
Систему контроля версий
Большинство IDE поддерживают множество языков программирования и содержат другие дополнительные функции. Поэтому они требуют большое количество времени для загрузки и установки.

Требования к среде программирования на Python
Итак, что нужно знать о среде программирования. Списки функций варьируются от приложения к приложению, но есть основной набор функций, который упрощает разработку:

Сохранять и перезагружать файлы
IDE или редактор позволят сохранить работу и открыть ее позже, в том же состоянии, в котором она была до закрытия.
Запустить код в среде программирования
С помощью IDE запустить код Python, будет не сложнее, чем из простого текстового редактора.
Поддержка отладки
Возможность проверить код во время перед запуском — особенностью всех IDE и прочих редакторов кода.
Подсветка синтаксиса
Определение ключевых слов, переменных и символов в коде делает чтение и понимание кода намного проще.
Автоматическое форматирование кода
Любой редактор или IDE будет распознавать двоеточие в конце for или while.
Есть много других функций: управление исходным кодом, модель расширения, инструменты сборки и тестирования, помощь с синтаксисом языка и другие. Но приведенный выше список — основные функции, которые поддерживает хорошая среда редактирования.

Учитывая эти особенности, давайте рассмотрим некоторые инструменты общего назначения, которые используют для разработки в Python.

Основные редакторы и IDE с поддержкой Python
Eclipse + PyDev
Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?Python IDE — какой редактор кода выбрать?
Категория: IDE
Веб-сайт: www.eclipse.org
Инструменты Python: PyDev, www.pydev.org
Если вы интересовались открытым программным обеспечением, скорее всего, слышали об Eclipse. Доступный для Linux, Windows и OS X, Eclipse де-факто открытое программное обеспечение для разработки на Java. Для него создано много расширений и надстроек, что делает Eclipse полезным в большинстве областях разработки.

Одно из них — PyDev, который позволяет отлаживать программы на Python, автодополнять код и пользоваться интерактивной консолью Python. Установка PyDev в Eclipse проста: из Eclipse выберите «Справка», «Eclipse Marketplace», затем ищите PyDev. Нажмите «Установить» и при необходимости перезапустите Eclipse.
Eclipse with PyDev installedПлюсы: Если уже установлен Eclipse, добавление PyDev будет быстрее и проще. PyDev прост для опытного разработчика Eclipse.
Минусы: Если вы только начинаете знакомство с Python или с разработкой программного обеспечения, Eclipse покажется сложным. Выше было упомянуто, что IDE требуют много знаний для правильного использования. Eclipse — багаж знаний, при этом мешок микропроцессов в придачу.

Sublime Text
Категория: Редактор кода
Веб-сайт: https://www.sublimetext.com

Sublime Text, написанный инженером Google в погоне за мечтой о лучшем текстовом редакторе, чрезвычайно популярный редактор кода. Sublime Text, поддерживается на всех платформах, имеет встроенную поддержку редактирования кода Python и богатый набор расширений (называемых пакетами), с помощью которых возможности синтаксиса и редактирования расширяются.

Установка дополнительных пакетов Python покажется сложной: пакеты Sublime Text написаны на Python, и для установки редактора часто требуется выполнить скрипты Python непосредственно в Sublime Text.
редактор кода Sublime TextПлюсы: Sublime Text популярный в сообществе разработчиков. Как редактор кода, Sublime Text быстрый, легкий и хорошо поддерживается.
Минусы: Sublime Text не бесплатный, хотя можно использовать ознакомительную версию неопределенный период времени. Установка расширений потребует усилий, а так же отсутствие прямой поддержки для выполнения или отладки кода из редактора — минус.

Atom
Категория: Редактор кода
Веб-сайт: https://atom.io/
Доступный на всех платформах Atom считается «хакерским текстовым редактором 21-го века». Проработанный интерфейс, работа с файловой системой и магазин расширений. Свободный в доступе Atom создан с использованием Electron, фреймворка для создания компьютерных приложений, использующих JavaScript, HTML и CSS. Поддержка языка Python обеспечивается расширением, которое можно установить при запуске Atom.
Atom — редактор кодаПлюсы: Поддерживается на всех платформах, благодаря Electron. Atom невелик по объему и быстро загружается.
Минусы: Поддержка работы с кодом и отладки не встроена, но есть дополнения к редактору. Поскольку Atom построен на Electron, он работает в как процесс JavaScript, а не как приложение.

GNU Emacs
Категория: Редактор кода
Веб-сайт: https://www.gnu.org/software/emacs/

Перед началом войны iPhone и Android, задолго до войны Linux против Windows, и даже до войны ПК против Mac, шла Война редакторов и GNU Emacs участвовал в ней. Будучи представленным как «масштабируемый, настраиваемый, самодокументирующийся редактор отображения в реальном времени», с GNU Emacs работают почти так же давно, как и с UNIX. Всегда бесплатная и доступная на каждой платформе (в той или иной форме), GNU Emacs использует форму мощного языка программирования Lisp для настроек.